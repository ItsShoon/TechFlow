{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nconst useCart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const addToCart = useCallback(product => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.id === product.id);\n      if (existingItem) {\n        return prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      }\n      return [...prevCart, {\n        ...product,\n        quantity: 1\n      }];\n    });\n  }, []);\n  const removeFromCart = useCallback(productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  }, []);\n  const clearCart = useCallback(() => {\n    setCart([]);\n  }, []);\n  const getTotalItems = useCallback(() => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  }, [cart]);\n  return {\n    cart,\n    addToCart,\n    removeFromCart,\n    clearCart,\n    getTotalItems\n  };\n};\n_s(useCart, \"6+2oNTiS2TQuiAQYtj9EEGx3v6k=\");\nexport default useCart;","map":{"version":3,"names":["useState","useCallback","useCart","_s","cart","setCart","addToCart","product","prevCart","existingItem","find","item","id","map","quantity","removeFromCart","productId","filter","clearCart","getTotalItems","reduce","total"],"sources":["C:/Projetos/pw_proj/TechFlow/projeto/src/hooks/useCart.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nconst useCart = () => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const addToCart = useCallback((product) => {\r\n    setCart((prevCart) => {\r\n      const existingItem = prevCart.find(item => item.id === product.id);\r\n      if (existingItem) {\r\n        return prevCart.map(item =>\r\n          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\r\n        );\r\n      }\r\n      return [...prevCart, { ...product, quantity: 1 }];\r\n    });\r\n  }, []);\r\n\r\n  const removeFromCart = useCallback((productId) => {\r\n    setCart((prevCart) => prevCart.filter(item => item.id !== productId));\r\n  }, []);\r\n\r\n  const clearCart = useCallback(() => {\r\n    setCart([]);\r\n  }, []);\r\n\r\n  const getTotalItems = useCallback(() => {\r\n    return cart.reduce((total, item) => total + item.quantity, 0);\r\n  }, [cart]);\r\n\r\n  return { cart, addToCart, removeFromCart, clearCart, getTotalItems };\r\n};\r\n\r\nexport default useCart;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,SAAS,GAAGL,WAAW,CAAEM,OAAO,IAAK;IACzCF,OAAO,CAAEG,QAAQ,IAAK;MACpB,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAClE,IAAIH,YAAY,EAAE;QAChB,OAAOD,QAAQ,CAACK,GAAG,CAACF,IAAI,IACtBA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAAG;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;QAAE,CAAC,GAAGH,IACtE,CAAC;MACH;MACA,OAAO,CAAC,GAAGH,QAAQ,EAAE;QAAE,GAAGD,OAAO;QAAEO,QAAQ,EAAE;MAAE,CAAC,CAAC;IACnD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGd,WAAW,CAAEe,SAAS,IAAK;IAChDX,OAAO,CAAEG,QAAQ,IAAKA,QAAQ,CAACS,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,SAAS,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAGjB,WAAW,CAAC,MAAM;IAClCI,OAAO,CAAC,EAAE,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,aAAa,GAAGlB,WAAW,CAAC,MAAM;IACtC,OAAOG,IAAI,CAACgB,MAAM,CAAC,CAACC,KAAK,EAAEV,IAAI,KAAKU,KAAK,GAAGV,IAAI,CAACG,QAAQ,EAAE,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,OAAO;IAAEA,IAAI;IAAEE,SAAS;IAAES,cAAc;IAAEG,SAAS;IAAEC;EAAc,CAAC;AACtE,CAAC;AAAChB,EAAA,CA5BID,OAAO;AA8Bb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}